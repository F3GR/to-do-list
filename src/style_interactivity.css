:root {
    /*--system-ui: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    --light-emerald: rgb(122, 255, 213);
    --light-blue: rgb(159, 237, 255);
    --white: white;
    --whitesmoke: rgb(242, 239, 239);



    --element-panels-border-radius: 0.5rem;
    --main-panels-border-radius: 1rem;
    --group-borders-color: var(--whitesmoke);
    --task-background-color: var(--whitesmoke);
    --task-border-color: var(--whitesmoke);
    --project-background-color: var(--whitesmoke);
    --project-border-color: var(--whitesmoke);*/

    --black: rgb(0, 0, 0);

    --interactive-pointer-style: pointer;
    --scale-size-hover-panels: 1.05;
    --scale-size-hover-big-icons: 1.1;
    --scale-size-hover-small-icons: 1.2;
    --click-animation-duration: 0.1s;

    --completed-task-color: rgb(50, 240, 50);
    --menu-border-color: var(--whitesmoke);
    --required-color: rgb(255, 60, 0);
    --selected-background-color: #a2ffda;
    --selected-border-color: var(--white);

    --text-color: rgb(45, 45, 45);
    --borders-color: rgb(90, 90, 90);

    --main-heading-1-font-size: ;     /* trackIt */
    --main-heading-2-font-size: ;     /* task */
    --main-heading-3-font-size: ;     /* task description heads */
    --main-paragraph-font-size: ;     /* task description heads */

    --menu-heading-3-font-size: ;
    --menu-paragraph-font-size: ;
    --menu-button-text-font-size: ;

    --element-panels-border-radius: 0.5rem;
    --main-panels-border-radius: 1rem;
}

button {
  cursor: var(--interactive-pointer-style);
  position: relative;
  will-change: transform;
  transition: transform var(--click-animation-duration) ease;
}

button:focus {
  outline: 0.2rem ridge var(--black);
  border: 0.1rem solid var(--selected-border-color);
  border-radius: var(--element-panels-border-radius);
  transform: scale(var(--scale-size-hover-small-icons));
}

input:focus {
  outline: 0.2rem ridge var(--black);
  border: 0.1rem solid var(--selected-border-color);
  border-radius: var(--element-panels-border-radius);
}

button:hover {
  transform: scale(var(--scale-size-hover-small-icons));
}

button:active {
  transform: scale(1);
}

.error-modal,
.project-menu,
.task-menu,
.remove-menu {
  opacity: 0%;
  transition: opacity .4s ease;
}

.error-modal.shown,
.project-menu.shown,
.task-menu.shown,
.remove-menu.shown {
  opacity: 100%;
  visibility: visible;
}

  /* Sidebar */

  .bar-types > *.current,
  aside .projects-list > .project.current {
    background-color: var(--selected-background-color);
  }
  
  .bar-types > *.current,
  .projects-list > *.current {
    border: 0.1rem solid var(--selected-border-color);
  }

  .bar-types > *:hover,
  .bar-types > *:focus {
    transform: scale(var(--scale-size-hover-panels));
  }

  .bar-types > *:active {
    transform: scale(1);
  }

  .project {
    transition: transform var(--click-animation-duration);
  }
  
  .project:active {
    transform: scale(1);
  }

  .project:hover,
  .project:focus {
    cursor: pointer;
    transform: scale(var(--scale-size-hover-panels));
  }

  .project:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
  }

  .project:active {
    transform: scale(1);
  }

  .bar-footer a {
    pointer-events: none;
  }

  .bar-footer:hover,
  .bar-footer:focus {
    transform: scale(var(--scale-size-hover-panels));
  }

  .bar-footer:active {
    transform: scale(1);
  }


  /* View options */
  .priority-border-box *,
  .status-border-box *,
  .sort-options-border-box > * {
    cursor: pointer;
  }

   .priority-border-box .option-button:hover,
   .status-border-box .option-button:hover,
   .priority-border-box .option-button:focus,
   .status-border-box .option-button:focus {
    transform: scale(var(--scale-size-hover-big-icons));
    transition: transform var(--click-animation-duration);
  }

  .priority-border-box .option-button:focus,
  .status-border-box .option-button:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
  }

   .priority-border-box .option-button:active,
   .status-border-box .option-button:active {
    transform: scale(1);
  }

 .priority-border-box .option-button > .radio-button::after,
 .status-border-box .option-button > .radio-button::after {
    content: '';
    width: 100%;
    height: 100%;
    background-color: var(--completed-task-color);
    border-radius: 50%;
    transform: scale(0);
    transition: transform 0.3s ease;
    transform-origin: center center;
}

 .priority-border-box .option-button > input:checked + .radio-button::after,
 .status-border-box .option-button > input:checked + .radio-button::after {
    display: block;
    transform: scale(1);
}

.sort-options-border-box .sort-arrow {
  transition: transform 0.4s ease;
}

.sort-options-border-box .sort-arrow.enabled {
  transform: rotate(180deg);
}


/* Custom dropdown menu */

/*the container must be positioned relative:*/
.custom-select {
  position: relative;
  font-family: Arial;
}

.custom-select select {
  display: none; /*hide original SELECT element:*/
}

.select-selected {
  background-color: var(--selected-border-color);
}

.select-selected:hover {
  background-color: var(--selected-background-color);
}

.select-selected:hover:after {
  background: url(./assets/fold-select-hover.svg);
  background-size: contain;
  background-repeat: no-repeat;
  width: 2rem;
  height: 2rem;
}

/*style the arrow inside the select element:*/
.select-selected:after {
  position: absolute;
  content: "";
  right: 0.5rem;
  background: url(./assets/fold-select.svg);
  background-size: contain;
  background-repeat: no-repeat;
  width: 2rem;
  height: 2rem;
  transition: transform 0.3s ease-in;
}

/*point the arrow upwards when the select box is open (active):*/
.select-selected.select-arrow-active:after {
  transform: rotate(180deg);
}


/*style the items (options), including the selected item:*/
.select-items div,
.select-selected {
  padding: 0.2rem 0.5rem;
  border: 0.1rem solid var(--borders-color);
  background-color: var(--selected-border-color);
  cursor: pointer;
  border-radius: var(--element-panels-border-radius);
}

/*style items (options):*/
.select-items {
  border-radius: var(--element-panels-border-radius);
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 99;
}

.select-hide {
  display: none;
}

.select-items,
.select-items div {
	transition: transform var(--click-animation-duration) ease;
}

.select-selected:focus,
.select-items div:hover {
  background-color: var(--selected-background-color);
  transform: scale(var(--scale-size-hover-panels));
  outline: 0.2rem ridge var(--black);
  border: 0.1rem solid var(--selected-border-color);
  border-radius: var(--element-panels-border-radius);
}
.select-selected:focus,
.select-items div:focus {
  background-color: var(--selected-background-color);
  transform: scale(var(--scale-size-hover-panels));
  outline: 0.2rem ridge var(--black);
  border: 0.1rem solid var(--selected-border-color);
  border-radius: var(--element-panels-border-radius);
}

/* Task panel */

.task[data-task-status='0'] label.status-checkbox svg {
  animation: fillCheckboxGreen 0.5s forwards;
}

@keyframes fillCheckboxGreen {
  from {
    stroke: var(--completed-task-color);
    stroke-dashoffset: 100;
    stroke-opacity: 0;
    stroke-width: 3;
  }
  to {
    stroke: var(--completed-task-color);
    stroke-dashoffset: 0;
    stroke-opacity: 1;
    stroke-width: 3;
  }
}

.task[data-task-status='0'][data-task-priority='2'] label.status-checkbox svg {
  animation: fillCheckboxHighPriority 0.5s forwards;
}

@keyframes fillCheckboxHighPriority {
  from {
    stroke: var(--required-color);
    stroke-dashoffset: 100;
    stroke-opacity: 0;
    stroke-width: 3;
  }
  to {
    stroke: var(--required-color);
    stroke-dashoffset: 0;
    stroke-opacity: 1;
    stroke-width: 3;
  }
}

.task label.status-checkbox:hover,
.task label.status-checkbox:focus {
  cursor: pointer;
  transform: scale(var(--scale-size-hover-small-icons));
  position: relative;
  transition: transform var(--click-animation-duration);
}

.task label.status-checkbox:active {
  transform: scale(1);
}

  /* Task page menu */

  /* Remove confirmation menu */

  /* Error modal */

  .error-modal .title .exit:focus {
    transition: transform var(--click-animation-duration) ease;
  }

  .error-modal .title .exit:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
    transform: scale(var(--scale-size-hover-big-icons));
  }
  
  .error-modal .title .exit:hover {
    transform: scale(var(--scale-size-hover-big-icons));
  }

  .error-modal .title .exit:active {
    transform: scale(1);
  }

  .error-modal .button-box .exit-ok:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
    transform: scale(var(--scale-size-hover-panels));
    transition: transform var(--click-animation-duration) ease;
  }
  
  .error-modal .button-box .exit-ok:hover {
    transform: scale(var(--scale-size-hover-panels));
  }

  .error-modal .button-box .exit-ok:active {
    transform: scale(1);
  }

  /* Project menu */

  .project-menu .title .exit:focus {
    transition: transform var(--click-animation-duration) ease;
  }

  .project-menu .title .exit:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
    transform: scale(var(--scale-size-hover-big-icons));
  }
  
  .project-menu .title .exit:hover {
    transform: scale(var(--scale-size-hover-big-icons));
  }

  .project-menu .title .exit:active {
    transform: scale(1);
  }

  .project-menu fieldset > .project-options > * {
    cursor: pointer;
    transition: transform var(--click-animation-duration) ease;
  }

  .project-options .project-icon-option.selected {
    border-color: var(--selected-border-color);
    background-color: var(--selected-background-color);
  }

  .project-menu fieldset > .project-options > *:focus {
    outline: 0.2rem ridge var(--black);
    border-radius: var(--element-panels-border-radius);
    transform: scale(var(--scale-size-hover-big-icons));
    transition: transform var(--click-animation-duration) ease;
  }

  .project-menu fieldset > .project-options > *:hover {
    transform: scale(var(--scale-size-hover-big-icons));
  }

  .project-menu fieldset > .project-options > *:active {
    transform: scale(1);
  }

  .project-menu .button-box > *:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
    transform: scale(var(--scale-size-hover-panels));
    transition: transform var(--click-animation-duration) ease;
  }
  
  .project-menu .button-box > *:hover {
    transform: scale(var(--scale-size-hover-panels));
  }

  .project-menu .button-box > *:active {
    transform: scale(1);
  }

  /* Task menu */

  .task-menu .title .exit:focus,
  .task-menu input:focus,
  .task-menu textarea:focus,
  .task-menu .button-box > button:focus {
    outline: 0.2rem ridge var(--black);
    border: 0.1rem solid var(--selected-border-color);
    border-radius: var(--element-panels-border-radius);
    transition: transform var(--click-animation-duration) ease;
  }


